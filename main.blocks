<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable type="KIND_SpriteKind" id="!XKQQbIv{.e,A{,U.IIg">Shader</variable><variable type="KIND_SpriteKind" id="xS$vY{Ha!SnQR}DEOEBP">Player</variable><variable type="KIND_SpriteKind" id="v$H@5i~X4~{@68W-9:e0">Projectile</variable><variable type="KIND_SpriteKind" id="w7!#=J)VQjiG)CqjKKgO">Food</variable><variable type="KIND_SpriteKind" id="~rvl`n7tS%V#.$TXtvV?">Enemy</variable><variable id="4/H9%{N@Lf5;D0[|xblD">mySprite</variable><variable id="x]j;q{Iyhi8,Ak.h{3lA">myShader</variable></variables><block type="pxt-on-start" id="in,IcQx,.|hNh#vaR9Ae" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="}^ln}IF*}5^FK$~.=fz|"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace shader {" line1="    const shade04 = (hex`00010101010101010101010101010101`) // very light" line2="    const shade03 = (hex`0F01050101010101010101010D01010D`) // medium light" line3="    const shade02 = (hex`0F010301050109010901050D0301050B`) // low light" line4="    const shade01 = (hex`0F01040503010709060103030B01040C`) // a little light" line5="    const shade1 = (hex`0F0D0A0B0E0408060C060B0C0F0B0C0F`)  // a little dark" line6="    const shade2 = (hex`0F0B0C0C0C0E0C080F080C0F0F0C0F0F`)  // low dark" line7="    const shade3 = (hex`0F0C0F0F0F0C0F0C0F0C0F0F0F0F0F0F`)  // medium dark" line8="    const shade4 = (hex`00000000000000000000000000000000`)  // very dark" line9="    let screenRowsBuffer: Buffer;" line10="    let maskRowsBuffer: Buffer;" line11="" line12="    export enum ShadeLevel {" line13="        //% block=&quot;dark one&quot;" line14="        Dark1 = 1," line15="        //% block=&quot;dark two&quot;" line16="        Dark2 = 2," line17="        //% block=&quot;dark three&quot;" line18="        Dark3 = 3," line19="        //% block=&quot;dark four&quot;" line20="        Dark4 = 4," line21="        //% block=&quot;light one&quot;" line22="        Light1 = -1," line23="        //% block=&quot;light two&quot;" line24="        Light2 = -2," line25="        //% block=&quot;light three&quot;" line26="        Light3 = -3," line27="        //% block=&quot;light four&quot;" line28="        Light4 = -4," line29="    }" line30="" line31="    class ShaderSprite extends Sprite {" line32="        protected shadePalette: Buffer;" line33="        shadeRectangle: boolean;" line34="" line35="        constructor(image: Image, shadePalette: Buffer) {" line36="            super(image);" line37="            this.shadePalette = shadePalette;" line38="            this.shadeRectangle = true;" line39="        }" line40="" line41="        setShadeImage(image: Image = null, shadePalette: Buffer = null) {" line42="            if (image) this.setImage(image);" line43="            if (shadePalette) this.shadePalette = shadePalette" line44="        }" line45="" line46="        __drawCore(camera: scene.Camera) {" line47="            if (this.isOutOfScreen(camera)) return;" line48="" line49="            const ox = (this.flags &amp; sprites.Flag.RelativeToCamera) ? 0 : camera.drawOffsetX;" line50="            const oy = (this.flags &amp; sprites.Flag.RelativeToCamera) ? 0 : camera.drawOffsetY;" line51="" line52="            const l = this.left - ox;" line53="            const t = this.top - oy;" line54="" line55="            if (this.shadeRectangle) {" line56="                screen.mapRect(l, t, this.image.width, this.image.height, this.shadePalette);" line57="            }" line58="            else {" line59="                shadeImage(screen, l, t, this.image, this.shadePalette);" line60="            }" line61="" line62="" line63="            if (this.flags &amp; SpriteFlag.ShowPhysics) {" line64="                const font = image.font5;" line65="                const margin = 2;" line66="                let tx = l;" line67="                let ty = t + this.height + margin;" line68="                screen.print(`${this.x &gt;&gt; 0},${this.y &gt;&gt; 0}`, tx, ty, 1, font);" line69="                tx -= font.charWidth;" line70="                if (this.vx || this.vy) {" line71="                    ty += font.charHeight + margin;" line72="                    screen.print(`v${this.vx &gt;&gt; 0},${this.vy &gt;&gt; 0}`, tx, ty, 1, font);" line73="                }" line74="                if (this.ax || this.ay) {" line75="                    ty += font.charHeight + margin;" line76="                    screen.print(`a${this.ax &gt;&gt; 0},${this.ay &gt;&gt; 0}`, tx, ty, 1, font);" line77="                }" line78="            }" line79="" line80="            // debug info" line81="            if (game.debug) {" line82="                screen.drawRect(" line83="                    Fx.toInt(this._hitbox.left) - ox," line84="                    Fx.toInt(this._hitbox.top) - oy," line85="                    Fx.toInt(this._hitbox.width)," line86="                    Fx.toInt(this._hitbox.height)," line87="                    1" line88="                );" line89="            }" line90="        }" line91="    }" line92="" line93="" line94="    function shadeImage(target: Image, left: number, top: number, mask: Image, palette: Buffer) {" line95="        if (!screenRowsBuffer || screenRowsBuffer.length &lt; target.height) {" line96="            screenRowsBuffer = pins.createBuffer(target.height);" line97="        }" line98="        if (!maskRowsBuffer || maskRowsBuffer.length &lt; target.height) {" line99="            maskRowsBuffer = pins.createBuffer(mask.height);" line100="        }" line101="" line102="        let targetX = left | 0;" line103="        let targetY = top | 0;" line104="        let y: number;" line105="        let x: number;" line106="" line107="        for (x = 0; x &lt; mask.width; x++, targetX++) {" line108="            if (targetX &gt;= target.width) break;" line109="            else if (targetX &lt; 0) continue;" line110="" line111="            mask.getRows(x, maskRowsBuffer);" line112="            target.getRows(targetX, screenRowsBuffer);" line113="" line114="            for (y = 0, targetY = top | 0; y &lt; mask.height; y++, targetY++) {" line115="                if (targetY &gt;= target.height) break;" line116="                else if (targetY &lt; 0) continue;" line117="" line118="                if (maskRowsBuffer[y]) screenRowsBuffer[targetY] = palette[screenRowsBuffer[targetY]];" line119="            }" line120="            target.setRows(targetX, screenRowsBuffer)" line121="        }" line122="    }" line123="" line124="    function shadeitem(shadeLevel: number): Buffer {" line125="        switch (shadeLevel) {" line126="            case 1: return shade1;" line127="            case 2: return shade2;" line128="            case 3: return shade3;" line129="            case 4: return shade4;" line130="            case -1: return shade01;" line131="            case -2: return shade02;" line132="            case -3: return shade03;" line133="            case -4: return shade04;" line134="        }" line135="        return shade1" line136="    }" line137="" line138="    //% blockId=shader_createRectangularShaderSprite" line139="    //% block=&quot;create rectangular shader with width $width height $height shade $shadeLevel&quot;" line140="    //% shadeLevel.shadow=shader_shadelevel" line141="    //% width.defl=16" line142="    //% height.defl=16" line143="    //% blockSetVariable=myShader" line144="    //% weight=90" line145="    export function createRectangularShaderSprite(width: number, height: number, shadeLevel: number): Sprite {" line146="        const scene = game.currentScene();" line147="" line148="        let palette: Buffer;" line149="" line150="        palette = shadeitem(shadeLevel);" line151="        const i = image.create(width, height);" line152="        i.fill(3);" line153="" line154="        const sprite = new ShaderSprite(i, palette)" line155="        sprite.setKind(SpriteKind.Shader);" line156="        scene.physicsEngine.addSprite(sprite);" line157="" line158="        return sprite" line159="    }" line160="" line161="    //% blockId=shader_createImageShaderSprite" line162="    //% block=&quot;create image shader with $image shade $shadeLevel&quot;" line163="    //% image.shadow=screen_image_picker" line164="    //% shadeLevel.shadow=shader_shadelevel" line165="    //% blockSetVariable=myShader" line166="    //% weight=100" line167="    export function createImageShaderSprite(image: Image, shadeLevel: number): Sprite {" line168="        const scene2 = game.currentScene();" line169="" line170="        let palette2: Buffer;" line171="" line172="        palette2 = shadeitem(shadeLevel);" line173="" line174="        const sprite2 = new ShaderSprite(image, palette2)" line175="        sprite2.setKind(SpriteKind.Shader);" line176="        scene2.physicsEngine.addSprite(sprite2);" line177="        sprite2.shadeRectangle = false;" line178="" line179="        return sprite2" line180="    }" line181="" line182="    //% blockId=shader_setShadeImage" line183="    //% block=&quot; $spr set shade image to $img=screen_image_picker&quot;" line184="    //% spr.shadow=variables_get spr.defl=myShader" line185="    //% weight=80" line186="    export function setImage(spr: ShaderSprite, img: Image) {" line187="        spr.setShadeImage(img);" line188="    }" line189="" line190="    //% blockId=shader_setShadeLevel" line191="    //% block=&quot; $spr set shade level to $shadeLevel=shader_shadelevel&quot;" line192="    //% spr.shadow=variables_get spr.defl=myShader" line193="    //% weight=70" line194="    export function setShade(spr: ShaderSprite, shadeLevel: number) {" line195="        let palette3: Buffer;" line196="        palette3 = shadeitem(shadeLevel)" line197="        spr.setShadeImage(null,palette3);" line198="    }" line199="" line200="    //% blockId=shader_shadelevel" line201="    //% block=&quot;$level&quot;" line202="    //% shim=TD_ID" line203="    //% weight=50" line204="    export function _shadeLevel(level: ShadeLevel): number {" line205="        return level;" line206="    }" line207="}" numlines="208"></mutation><next><block type="variables_set" id="PzcU0{(jJ^PUpSp^/T;@"><field name="VAR" id="4/H9%{N@Lf5;D0[|xblD">mySprite</field><value name="VALUE"><shadow type="math_number" id="~xQ#);C*ESI$dfF}T(q7"><field name="NUM">0</field></shadow><block type="spritescreate" id="!MUoD2SvZF.IkY7JMiTN"><value name="img"><shadow type="screen_image_picker" id="K;ngAjlgp#^L|nul!)@;"><field name="img">img`
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
112233445566778899aabbccddeeff
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="kind"><shadow type="spritekind" id="V$$MzT8w9L0}_1{P3tl6"><field name="MEMBER">Player</field></shadow></value></block></value><next><block type="variables_set" id="(Gfs|eV_/;pN|8.7Mop8"><field name="VAR" id="x]j;q{Iyhi8,Ak.h{3lA">myShader</field><value name="VALUE"><shadow type="math_number" id="P($XOBBnqQwz~3VjyRdA"><field name="NUM">0</field></shadow><block type="shader_createImageShaderSprite" id="QglEZ9}9@mhovxyAY~T^"><value name="image"><shadow type="screen_image_picker" id="E{q{Y6?g8@W]mU8P`+Ve"><field name="img">img`
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
222222222222222222222222222222
222222222222222222222222222222
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="shadeLevel"><shadow type="shader_shadelevel" id="KPx629Yo]6DY*Rwd:8h|"><field name="level">shader.ShadeLevel.Dark4</field></shadow></value></block></value><next><block type="variables_set" id="cnTHTY~Hb)nbdOnE,7?m"><field name="VAR" id="x]j;q{Iyhi8,Ak.h{3lA">myShader</field><value name="VALUE"><shadow type="math_number" id="6A4]eFQA?gY3b}y9y[F="><field name="NUM">0</field></shadow><block type="shader_createImageShaderSprite" id="/K}/L#Az;gv}gnJ7Rn?w"><value name="image"><shadow type="screen_image_picker" id="%*-,]wb[4Pof~yzs^HHb"><field name="img">img`
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
222222222222222222222222222222
222222222222222222222222222222
..............................
..............................
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="shadeLevel"><shadow type="shader_shadelevel" id="UuusNZ6:s)#q,F#?4wZy"><field name="level">shader.ShadeLevel.Dark3</field></shadow></value></block></value><next><block type="variables_set" id="z-ve;Bifok[e^Xu]E$8["><field name="VAR" id="x]j;q{Iyhi8,Ak.h{3lA">myShader</field><value name="VALUE"><shadow type="math_number" id="UX69v6-_z|8`f;$-37Q;"><field name="NUM">0</field></shadow><block type="shader_createImageShaderSprite" id="h]Q)N|8VYGbcjEB$lMwj"><value name="image"><shadow type="screen_image_picker" id=",z!4emV.TTl5Ro*(HXw~"><field name="img">img`
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
222222222222222222222222222222
222222222222222222222222222222
..............................
..............................
..............................
..............................
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="shadeLevel"><shadow type="shader_shadelevel" id="IM[XqQ6zPX$NOQeVd6CX"><field name="level">shader.ShadeLevel.Dark2</field></shadow></value></block></value><next><block type="variables_set" id="C7F*2DdMi[wBhyNCn#Vr"><field name="VAR" id="x]j;q{Iyhi8,Ak.h{3lA">myShader</field><value name="VALUE"><shadow type="math_number" id="n!Z@_/Ra#(em,|ESP1Q9"><field name="NUM">0</field></shadow><block type="shader_createImageShaderSprite" id="x`S!/*H3Rfu!LwU95rMu"><value name="image"><shadow type="screen_image_picker" id="kn)ENhyXzagHJXWe?l#H"><field name="img">img`
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
222222222222222222222222222222
222222222222222222222222222222
..............................
..............................
..............................
..............................
..............................
..............................
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="shadeLevel"><shadow type="shader_shadelevel" id="hN00#9:|{?J3PCgKVhYJ"><field name="level">shader.ShadeLevel.Dark1</field></shadow></value></block></value><next><block type="variables_set" id="A`?XBDSRv7X[4~?Kg@U?"><field name="VAR" id="x]j;q{Iyhi8,Ak.h{3lA">myShader</field><value name="VALUE"><shadow type="math_number" id="gRCT$6U8xCo5);QW*3bl"><field name="NUM">0</field></shadow><block type="shader_createImageShaderSprite" id="@7f,]/q9OszIcjSThwN%"><value name="image"><shadow type="screen_image_picker" id=":NBsr{M_V(h+1:#$5`u1"><field name="img">img`
222222222222222222222222222222
222222222222222222222222222222
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="shadeLevel"><shadow type="shader_shadelevel" id="bp~kYo}YgES#i;#83L$X"><field name="level">shader.ShadeLevel.Light4</field></shadow></value></block></value><next><block type="variables_set" id="bVXm[9%}4x9~dgyK#5Wg"><field name="VAR" id="x]j;q{Iyhi8,Ak.h{3lA">myShader</field><value name="VALUE"><shadow type="math_number" id="ap^W+NP#TUz:eF3aK]xz"><field name="NUM">0</field></shadow><block type="shader_createImageShaderSprite" id="~|HO5DI^9n0)G~oJ-lW$"><value name="image"><shadow type="screen_image_picker" id="DgyTvTtl4|#79-8Gvk2n"><field name="img">img`
..............................
..............................
222222222222222222222222222222
222222222222222222222222222222
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="shadeLevel"><shadow type="shader_shadelevel" id="*Gl3GpHhHa4)EWbKMAs0"><field name="level">shader.ShadeLevel.Light3</field></shadow></value></block></value><next><block type="variables_set" id="h)fhT=0xw*S/kPTWca:+"><field name="VAR" id="x]j;q{Iyhi8,Ak.h{3lA">myShader</field><value name="VALUE"><shadow type="math_number" id="4uM}Op-Zhn[1b(Dt`wn}"><field name="NUM">0</field></shadow><block type="shader_createImageShaderSprite" id="piY#0#yo-vU|fJUn.SDt"><value name="image"><shadow type="screen_image_picker" id="4.PN]g$9gl~Wt?#?OIa|"><field name="img">img`
..............................
..............................
..............................
..............................
222222222222222222222222222222
222222222222222222222222222222
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="shadeLevel"><shadow type="shader_shadelevel" id="lNW4%hH6m-IEVhRMh7LI"><field name="level">shader.ShadeLevel.Light2</field></shadow></value></block></value><next><block type="variables_set" id="0`?-DE~0zI?uvpE~6bDZ"><field name="VAR" id="x]j;q{Iyhi8,Ak.h{3lA">myShader</field><value name="VALUE"><shadow type="math_number" id="ml=%-E-)=!jv+QK@I`-("><field name="NUM">0</field></shadow><block type="shader_createImageShaderSprite" id="9zWK2FV9ct)PleH?{7=T"><value name="image"><shadow type="screen_image_picker" id="]M%#?h*;@bHuSRHN$c37"><field name="img">img`
..............................
..............................
..............................
..............................
..............................
..............................
222222222222222222222222222222
222222222222222222222222222222
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
`</field><data>{"commentRefs":[],"fieldData":{"img":null}}</data></shadow></value><value name="shadeLevel"><shadow type="shader_shadelevel" id=":CIO8p^yyuK?ZNhF{1}@"><field name="level">shader.ShadeLevel.Light1</field></shadow></value></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>